{"version":3,"sources":["components/musicInfo/musicInfo.module.scss","components/sidenav/sidenav.module.scss","components/nav/nav.module.scss","components/player/player.module.scss","components/musicPlayer/musicPlayer.module.scss","components/musicInfo/MusicInfo.js","util/time.js","components/musicPlayer/MusicPlayer.js","components/player/Player.js","components/sideNavItem/SidenavItem.js","components/sidenav/Sidenav.js","assets/imgs/logo.png","components/nav/Nav.js","components/playerContainer/PlayerContainer.js","App.js","index.js","components/sideNavItem/sidenavItem.module.scss"],"names":["module","exports","MusicInfo","img","name","artist","className","styles","musicInfo","src","alt","defaultProps","convertNumberToTime","time","Math","floor","MusicPlayer","isPlaying","setIsPlaying","setMusicInfo","audioElm","musics","activeMusic","newProp","setActiveMusic","console","log","changeSong","dir","a","trackPercentage","currIndex","findIndex","music","_id","length","current","play","pause","audioTrackStyle","backgroundImage","colors","transform","container","ranger","currentTime","rangerContainer","type","min","max","duration","value","onChange","e","target","changeHandler","track","style","player","icon","faChevronLeft","size","onClick","faPauseCircle","faPlayCircle","color","currIsPlay","faChevronRight","Player","audioSrc","audio","SidenavItem","isActive","selectSong","item","active","infoContainer","Sidenav","isNavOpen","sidenav","open","title","map","Nav","setIsNavOpen","nav","logo","button","currNavOpen","PlayerContainer","useState","setMusics","window","innerWidth","useRef","useEffect","axios","get","process","musicsList","data","fetchMusics","updateMusicInfo","endMusicHandler","ref","display","onTimeUpdate","onLoadedMetadata","onEnded","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d7703fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"musicInfo\":\"musicInfo_musicInfo__ItmUm\",\"img\":\"musicInfo_img__3L9Dw\",\"name\":\"musicInfo_name__3lwxb\",\"artist\":\"musicInfo_artist__2N_at\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidenav\":\"sidenav_sidenav__1z6GE\",\"open\":\"sidenav_open__1W2iU\",\"title\":\"sidenav_title__qBSwp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"nav_nav__3vXMn\",\"logo\":\"nav_logo__3Y6aH\",\"button\":\"nav_button__31Fwe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"player_player__2Dbpo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"musicPlayer_container__2ktK2\",\"ranger\":\"musicPlayer_ranger__gHvWA\",\"time\":\"musicPlayer_time__2hrcG\",\"rangerContainer\":\"musicPlayer_rangerContainer__l6AUX\",\"track\":\"musicPlayer_track__dauM1\",\"player\":\"musicPlayer_player__3D6Mo\",\"icon\":\"musicPlayer_icon__2cQwl\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './musicInfo.module.scss';\n\nconst MusicInfo = ({ img, name, artist }) => (\n  <div className={styles.musicInfo}>\n    <img src={img} alt={img} className={styles.img} />\n    <h1 className={styles.name}>{name}</h1>\n    <h2 className={styles.artist}>{artist}</h2>\n  </div>\n);\nMusicInfo.defaultProps = {\n  img: '',\n  name: '',\n  artist: '',\n};\nMusicInfo.propTypes = {\n  img: PropTypes.string,\n  name: PropTypes.string,\n  artist: PropTypes.string,\n};\nexport default MusicInfo;\n","/* eslint-disable import/prefer-default-export */\nexport const convertNumberToTime = time =>\n  // input=62 , output=1:02\n  // eslint-disable-next-line no-param-reassign\n  `${Math.floor(time / 60)}:${\n    time % 60 < 10 ? `0${Math.floor(time % 60)}` : Math.floor(time % 60)\n  }`;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faPlayCircle,\n  faPauseCircle,\n  faChevronRight,\n  faChevronLeft,\n} from '@fortawesome/free-solid-svg-icons';\nimport PropTypes from 'prop-types';\nimport styles from './musicPlayer.module.scss';\nimport { convertNumberToTime } from '../../util/time';\n\nconst MusicPlayer = ({\n  isPlaying,\n  setIsPlaying,\n  musicInfo,\n  setMusicInfo,\n  audioElm,\n  musics,\n  activeMusic,\n  newProp = 'init',\n  setActiveMusic,\n}) => {\n  console.log(newProp);\n  const togglePlaying = () => {\n    if (!isPlaying) audioElm.current.play();\n    else audioElm.current.pause();\n    setIsPlaying(currIsPlay => !currIsPlay);\n  };\n  const changeHandler = e => {\n    const currentTime = e.target.value;\n    setMusicInfo({ ...musicInfo, currentTime });\n    audioElm.current.currentTime = currentTime;\n  };\n  const changeSong = async dir => {\n    setMusicInfo({ ...musicInfo, trackPercentage: 0 });\n    const currIndex = musics.findIndex(music => music._id === activeMusic._id);\n    switch (dir) {\n      case 'prev':\n        await setActiveMusic(\n          musics[currIndex - 1 >= 0 ? currIndex - 1 : musics.length - 1]\n        );\n        break;\n      case 'next':\n        await setActiveMusic(musics[(currIndex + 1) % musics.length]);\n        break;\n      default:\n        return;\n    }\n    if (isPlaying) audioElm.current.play();\n    else audioElm.current.pause();\n  };\n  const audioTrackStyle = {\n    backgroundImage: `linear-gradient(to right,${\n      activeMusic && activeMusic.colors[0]\n    } 0%,${activeMusic && activeMusic.colors[1]}100%)`,\n    transform: `scaleX(${musicInfo.trackPercentage})`,\n  };\n  return (\n    <div className={styles.container}>\n      <div className={styles.ranger}>\n        <p className={styles.time}>\n          {convertNumberToTime(musicInfo.currentTime)}\n        </p>\n        <div className={styles.rangerContainer}>\n          <input\n            type='range'\n            min={0}\n            max={musicInfo.duration || 0}\n            value={musicInfo.currentTime}\n            onChange={e => changeHandler(e)}\n          />\n          <div className={styles.track} style={audioTrackStyle} />\n        </div>\n\n        <p className={styles.time}>\n          {convertNumberToTime(musicInfo.duration || 0)}\n        </p>\n      </div>\n      <div className={styles.player}>\n        <FontAwesomeIcon\n          icon={faChevronLeft}\n          size='3x'\n          className={styles.icon}\n          onClick={() => changeSong('prev')}\n        />\n        <FontAwesomeIcon\n          icon={!isPlaying ? faPlayCircle : faPauseCircle}\n          size='6x'\n          color='crimson'\n          className={styles.icon}\n          onClick={() => togglePlaying()}\n        />\n        <FontAwesomeIcon\n          icon={faChevronRight}\n          size='3x'\n          className={styles.icon}\n          onClick={() => changeSong('next')}\n        />\n      </div>\n    </div>\n  );\n};\nMusicPlayer.defaultProps = {\n  audioElm: {},\n  musics: [],\n  activeMusic: {},\n  newProp: 'default',\n};\nMusicPlayer.propTypes = {\n  audioElm: PropTypes.object,\n  isPlaying: PropTypes.bool.isRequired,\n  setIsPlaying: PropTypes.func.isRequired,\n  musicInfo: PropTypes.object.isRequired,\n  setMusicInfo: PropTypes.func.isRequired,\n  musics: PropTypes.array,\n  activeMusic: PropTypes.object,\n  setActiveMusic: PropTypes.func.isRequired,\n};\nexport default MusicPlayer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MusicInfo from '../musicInfo/MusicInfo';\nimport MusicPlayer from '../musicPlayer/MusicPlayer';\nimport styles from './player.module.scss';\n\nconst Player = ({\n  music,\n  isPlaying,\n  setIsPlaying,\n  musicInfo,\n  setMusicInfo,\n  audioElm,\n  activeMusic,\n  setActiveMusic,\n  musics,\n}) => (\n  <div className={styles.player}>\n    <MusicInfo {...music} />\n    <MusicPlayer\n      audioSrc={music && music.audio}\n      isPlaying={isPlaying}\n      setIsPlaying={setIsPlaying}\n      musicInfo={musicInfo}\n      setMusicInfo={setMusicInfo}\n      audioElm={audioElm}\n      activeMusic={activeMusic}\n      setActiveMusic={setActiveMusic}\n      musics={musics}\n    />\n  </div>\n);\nPlayer.defaultProps = {\n  music: {},\n  audioElm: {},\n  activeMusic: {},\n  musics: [],\n};\nPlayer.propTypes = {\n  music: PropTypes.object,\n  isPlaying: PropTypes.bool.isRequired,\n  setIsPlaying: PropTypes.func.isRequired,\n  musicInfo: PropTypes.object.isRequired,\n  setMusicInfo: PropTypes.func.isRequired,\n  audioElm: PropTypes.object,\n  activeMusic: PropTypes.object,\n  setActiveMusic: PropTypes.func.isRequired,\n  musics: PropTypes.array,\n};\nexport default Player;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './sidenavItem.module.scss';\n\nconst SidenavItem = ({\n  music,\n  setActiveMusic,\n  audioElm,\n  isPlaying,\n  isActive,\n}) => {\n  const selectSong = async () => {\n    await setActiveMusic(music);\n    if (isPlaying) audioElm.current.play();\n    else audioElm.current.pause();\n  };\n  return (\n    <div\n      className={`${styles.item} ${isActive && styles.active}`}\n      onClick={() => selectSong()}\n    >\n      <img className={styles.img} src={music.img} alt={music.img} />\n      <div className={styles.infoContainer}>\n        <h5 className={styles.name}>{music.name}</h5>\n        <h6 className={styles.artist}>{music.artist}</h6>\n      </div>\n    </div>\n  );\n};\nSidenavItem.defaultProps = {\n  music: {},\n  audioElm: {},\n};\nSidenavItem.propTypes = {\n  music: PropTypes.object,\n  setActiveMusic: PropTypes.func.isRequired,\n  audioElm: PropTypes.object,\n  isPlaying: PropTypes.bool.isRequired,\n  isActive: PropTypes.bool.isRequired,\n};\nexport default SidenavItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SidenavItem from '../sideNavItem/SidenavItem';\nimport styles from './sidenav.module.scss';\n\nconst Sidenav = ({\n  musics,\n  activeMusic,\n  setActiveMusic,\n  audioElm,\n  isPlaying,\n  isNavOpen,\n}) => (\n  <div className={`${styles.sidenav} ${isNavOpen && styles.open}`}>\n    <h5 className={styles.title}> library </h5>\n    {musics.map(music => (\n      <SidenavItem\n        key={music._id}\n        music={music}\n        setActiveMusic={setActiveMusic}\n        audioElm={audioElm}\n        isPlaying={isPlaying}\n        isActive={music._id === (activeMusic && activeMusic._id)}\n      />\n    ))}\n  </div>\n);\nSidenav.defaultProps = {\n  musics: [],\n  activeMusic: {},\n  audioElm: {},\n};\nSidenav.propTypes = {\n  musics: PropTypes.array,\n  activeMusic: PropTypes.object,\n  setActiveMusic: PropTypes.func.isRequired,\n  audioElm: PropTypes.object,\n  isPlaying: PropTypes.bool.isRequired,\n  isNavOpen: PropTypes.bool.isRequired,\n};\nexport default Sidenav;\n","export default __webpack_public_path__ + \"static/media/logo.9b9d1f74.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './nav.module.scss';\nimport logo from '../../assets/imgs/logo.png';\n\nconst Nav = ({ setIsNavOpen }) => {\n  return (\n    <nav className={styles.nav}>\n      <img className={styles.logo} src={logo} alt={logo} />\n      <button\n        type='button'\n        className={styles.button}\n        onClick={() => setIsNavOpen(currNavOpen => !currNavOpen)}\n      >\n        library\n      </button>\n    </nav>\n  );\n};\nNav.propTypes = {\n  setIsNavOpen: PropTypes.func.isRequired,\n};\nexport default Nav;\n","import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Player from '../player/Player';\nimport Sidenav from '../sidenav/Sidenav';\nimport Nav from '../nav/Nav';\n\nconst PlayerContainer = () => {\n  const [musics, setMusics] = useState([]);\n  const [activeMusic, setActiveMusic] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [musicInfo, setMusicInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    trackPercentage: 0,\n  });\n  const [isNavOpen, setIsNavOpen] = useState(window.innerWidth > 600);\n  const audioElm = useRef(null);\n  useEffect(() => {\n    const fetchMusics = async () => {\n      const musicsList = await axios.get(\n        `${process.env.PUBLIC_URL}/data/musics.json`\n      );\n      setMusics(musicsList.data);\n      setActiveMusic(musicsList.data[0]);\n    };\n    fetchMusics();\n  }, []);\n  const updateMusicInfo = e => {\n    const { currentTime } = e.target;\n    const { duration } = e.target;\n    const trackPercentage = currentTime / duration;\n    setMusicInfo({ ...musicInfo, currentTime, duration, trackPercentage });\n  };\n  const endMusicHandler = async () => {\n    const currIndex = musics.findIndex(music => music._id === activeMusic._id);\n    await setActiveMusic(musics[(currIndex + 1) % musics.length]);\n    if (isPlaying) audioElm.current.play();\n    else audioElm.current.pause();\n  };\n  return (\n    <>\n      <Nav setIsNavOpen={setIsNavOpen} />\n      <Player\n        music={activeMusic}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        musicInfo={musicInfo}\n        setMusicInfo={setMusicInfo}\n        audioElm={audioElm}\n        activeMusic={activeMusic}\n        setActiveMusic={setActiveMusic}\n        musics={musics}\n      />\n      <Sidenav\n        musics={musics}\n        activeMusic={activeMusic}\n        setActiveMusic={setActiveMusic}\n        audioElm={audioElm}\n        isPlaying={isPlaying}\n        isNavOpen={isNavOpen}\n      />\n      <audio\n        src={activeMusic && activeMusic.audio}\n        ref={audioElm}\n        style={{ display: 'none' }}\n        onTimeUpdate={e => updateMusicInfo(e)}\n        onLoadedMetadata={e => updateMusicInfo(e)}\n        onEnded={() => endMusicHandler()}\n      />\n    </>\n  );\n};\n\nexport default PlayerContainer;\n","import React from 'react';\nimport './app.scss';\nimport PlayerContainer from './components/playerContainer/PlayerContainer';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <PlayerContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"sidenavItem_item__38Q_Y\",\"active\":\"sidenavItem_active__2RYw7\",\"img\":\"sidenavItem_img__34uY_\",\"infoContainer\":\"sidenavItem_infoContainer__1DUxP\",\"name\":\"sidenavItem_name__12yb4\",\"artist\":\"sidenavItem_artist__2G-np\"};"],"sourceRoot":""}